- Arma: Cold War Assault - Instead of removing the entire ‘Users’ folder,
  delete every folder in it

- Decide whether or not to use the ‘echo’ command in cleanup.bat to show the
  user what is currently being done

- Escape certain things within the command prompt: For example command prompt
  keywords like else, Cyrillic characters, real quotation marks, letters with
  an acute sign etc.

- Find out if there is a shorter way of referring to
  %userprofile%\AppData\LocalLow

- Hidden and Dangerous Deluxe: Figure out a proper method of exporting the
  second registry key

- If possible, check for the existence of a registry key and if it’s there,
  export it to a .reg file; otherwise skip it

- Port the batch files to Linux shell scripts. Decide whether to use ‘bash’ or
  ‘sh’ syntax

- Port the batch files to Python 3

- Quake: When deleting .cfg files, exclude the default config.cfg file

- Quake III: Find out console variables for the settings ‘Force player models’
  and ‘Draw team overlay’

- Steam user ID problem: Two ways to get the user ID programatically would be:
  1. `dir /b "C:\Program Files (x86)\Steam\userdata" | findstr /v "ac"`

  2. `for /f %%a in ('dir /b "C:\Program Files (x86)\Steam\userdata"') do echo "%%a" | findstr /v "ac"`

  Then, you would probably need to store the result in a variable like so:
  `set "steamuserid=for /f %%a in ('dir /b "C:\Program Files (x86)\Steam\userdata"') do echo "%%a" | findstr /v "ac""`

  How to continue from that point however, I don’t know.

- Soldiers: Heroes of World War II - Instead of removing the entire ‘profiles’
  folder, delete every folder in it and the last user file

- The Longest Journey: Concerning the cleanup procedure, the method here is
  considered bad practice since it only takes into account the first saveslot.
  Currently written to completely remove the ‘Save’ folder. Figure out how to
  delete all files and folders in ‘Save’ without getting rid of it completely.

- Try to find a middle ground between ‘copy’, ‘robocopy’ and ‘xcopy’, e.g. is
  ‘copy’ in this project really needed or can it be completely replaced with
  ‘robocopy’ or ‘xcopy’?

  One of the reasons I am concerned about this is a particular use case:

  A file exists somewhere in the game root directory or elsewhere on the
  machine and is being copied over by explicit filename, yet no backup folder
  exists on the flash drive. So if you apply ‘xcopy /e /i /y’ to copy that file
  over you’ll get the following message:

  Does TARGETFOLDER specify a file name
  or directory name on the target
  (F = file, D = directory)?

  The only workaround I found for this so far is to first create the target
  directory via ‘md’ and then either use ‘copy’ or ‘xcopy’.

- What Remains of Edith Finch: Rewrite to use a *.sav wildcard without
  referring to machine name, ID suffix or a combination of those.
